
set -o

x log init yy

GIT_DOMAIN=${GIT_DOMAIN:-$(x websrc gitdomain)}

git clone "git@${GIT_DOMAIN}:x-cmd/y0"

function prepare_gitb(){
    x yanfa vstream x0 | while read -r repo; do
        printf "%s\n" "git@${GIT_DOMAIN}:x-bash/${repo}.git"
    done | x gitb add
}

function handle_if_repo_empty(){
    git checkout -b main
    touch .gitignore
    git add .gitignore
    git commit -m ...
    x mkdirp mod
}


function work(){
    local no=$1
    x git clone "git@${GIT_DOMAIN}:x-cmd/y${no}.git"
    (
        cd "y${no}"
        yy:info "正在${PWD}创建目录mod"

        handle_if_repo_empty

        x gitb which x-bash/x-cmd

        x yanfa vstream "x$no" | while read -r mod; do
            (
                yy:info "以subtree模式更新模块 $mod"
                gibpath="$(x gitb which x-bash/${mod})"
                yy:info "gitb路径 $gibpath"
                if [ -d "mod/$mod" ]; then
                    git subtree pull  --prefix="mod/$mod" "$gibpath"  main
                else
                    git subtree add   --prefix="mod/$mod" "$gibpath" main
                fi
            )
        done
        git push "git@${GIT_DOMAIN}:x-cmd/y${no}.git" main
    )
}

function main(){
    prepare_gitb
    for i in 0 1 7; do
        work $i
    done
}

main
